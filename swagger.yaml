---
openapi: 3.0.1
info:
  title: The Open Food Network
  description: Some endpoints are public and require no authorization; others require authorization. Talk to us to get your credentials set up. Check out our repo! https://github.com/openfoodfoundation/openfoodnetwork
  version: "0.2"
servers:
- url: https://staging.katuma.org/api
security:
- api_key: []
tags:
- name: products
  description: Product endpoints
- name: product variants
  description: Product variant endpoints
- name: product images
  description: Product images endpoints
- name: orders
  description: Order endpoints
- name: shipments
  description: Order shipments endpoints
- name: enterprises
  description: Enterprises endpoints
- name: taxonomies
  description: Taxonomies endpoints
- name: cookies_consent
  description: Cookies_Consent endpoints
paths:
  /products/bulk_products:
    get:
      tags:
      - products
      description: Gets all Products.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /products/overridable:
    get:
      tags:
      - products
      description: Gets all Products.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
  /products:
    post:
      tags:
      - products
      description: Posts a new Product.
      parameters:
      - name: product_object
        in: path
        description: JSON object representing the Product to be posted.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/product_object'
      responses:
        "201":
          description: successful post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{product_id}:
    get:
      tags:
      - products
      description: Gets a Product by ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    put:
      tags:
      - products
      description: Updates the Product with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: product_object
        in: path
        description: JSON object representing the Product attributes to be overwritten.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/product_object_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      tags:
      - products
      description: Deletes the Product with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: successful deletion
  /products/{product_id}/clone:
    post:
      tags:
      - products
      description: Clones a Product by ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product to clone.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "201":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{product_id}/soft_delete:
    delete:
      tags:
      - products
      description: Soft deletes the Product with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: successful deletion
  /products/{product_id}/variants:
    get:
      tags:
      - product variants
      description: Gets all Variants of the given Product.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
    post:
      tags:
      - product variants
      description: Posts a new Product Variant.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_object
        in: path
        description: JSON object representing the Variant to be posted.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/variant_object'
      responses:
        "201":
          description: successful post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
  /products/{product_id}/variants/{variant_id}:
    get:
      tags:
      - product variants
      description: Gets a Variant by ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
    put:
      tags:
      - product variants
      description: Updates the Variant with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_object
        in: path
        description: JSON object representing the Variant attributes to be overwritten.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/variant_object_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Variant'
    delete:
      tags:
      - product variants
      description: Deletes the Variant with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: successful deletion
  /products/{product_id}/variants/{variant_id}/soft_delete:
    delete:
      tags:
      - product variants
      description: Soft-deletes the Variant with the given ID.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: successful deletion
  /product_images/{product_id}:
    post:
      tags:
      - product images
      description: Creates or updates product image.
      parameters:
      - name: product_id
        in: path
        description: Numeric ID of the Product.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "201":
          description: Product image added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
        "200":
          description: Product image updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductImage'
  /orders:
    get:
      tags:
      - orders
      description: Gets all Orders.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
  /orders/{order_number}/shipments.json:
    post:
      tags:
      - shipments
      description: Creates a new Shipment and adds given variant.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant to be added to the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: quantity
        in: path
        description: Quantity of the variant to be added to the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: stock_location_id
        in: path
        description: Stock location ID to be used to source the variant (for each OFN there's only one valid ID to be used here).
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "201":
          description: Shipment successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
  /orders/{order_number}/shipments/{shipment_number}.json:
    put:
      tags:
      - shipments
      description: Updates shipment.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_number
        in: path
        description: Number (not id) of the Shipment being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_object
        in: path
        description: JSON object representing the Shipmeent attributes to be overwritten.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/shipment_object'
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Shipment'
  /orders/{order_number}/shipments/{shipment_number}/add.json:
    put:
      tags:
      - shipments
      description: Adds a variant quantity to the given shipment.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_number
        in: path
        description: Number (not id) of the Shipment being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant to be added to the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: quantity
        in: path
        description: Quantity of the variant to be added to the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Variant quantity successfully added.
  /orders/{order_number}/shipments/{shipment_number}/remove.json:
    put:
      tags:
      - shipments
      description: Removes a variant from the given shipment.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_number
        in: path
        description: Number (not id) of the Shipment being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: variant_id
        in: path
        description: Numeric ID of the Variant to be removed from the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: quantity
        in: path
        description: Quantity of the variant to be removed from the shipment.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Variant quantity successfully rmeoved.
  /orders/{order_number}/shipments/{shipment_number}/ready.json:
    put:
      tags:
      - shipments
      description: Moves the shipment to the ready state.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_number
        in: path
        description: Number (not id) of the Shipment being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful workflow change.
  /orders/{order_number}/shipments/{shipment_number}/ship.json:
    put:
      tags:
      - shipments
      description: Moves the shipment to the shipped state.
      parameters:
      - name: order_number
        in: path
        description: Number (not id) of the Order being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: shipment_number
        in: path
        description: Number (not id) of the Shipment being changed.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Successful workflow change.
  /enterprises:
    put:
      tags:
      - enterprises
      description: Updates an Enterprise.
      parameters:
      - name: enterprise_object
        in: path
        description: JSON object representing the Enterprise to be overwritten.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/enterprise_object'
      responses:
        "200":
          description: Enterprise successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
    post:
      tags:
      - enterprises
      description: Creates a new Enterprise.
      parameters:
      - name: enterprise_object
        in: path
        description: JSON object representing the Enterprise attributes to be created.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/enterprise_object_1'
      responses:
        "201":
          description: Enterprise successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
  /enterprises/{enterprise_id}/update_image:
    post:
      tags:
      - enterprises
      description: Update enterprise images, promo and logo.
      parameters:
      - name: enterprise_id
        in: path
        description: ID of the enterprise.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: logo
        in: path
        description: Binary of the logo image.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: binary
      - name: promo
        in: path
        description: Binary of the promo image.
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: binary
      responses:
        "200":
          description: Image successfully uploaded. URL to the uploaded image
          content:
            application/json:
              schema:
                type: string
  /enterprises/{enterprise_permalink}/logo.json:
    delete:
      tags:
      - enterprises
      description: Delete enterprise logo image.
      parameters:
      - name: enterprise_permalink
        in: path
        description: Permalink of the enterprise.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Image successfully deleted. Json object representing the enterprise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
  /enterprises/{enterprise_permalink}/promo_image.json:
    delete:
      tags:
      - enterprises
      description: Delete enterprise promo image.
      parameters:
      - name: enterprise_permalink
        in: path
        description: Permalink of the enterprise.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Image successfully deleted. Json object representing the enterprise
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enterprise'
  /shops/{enterprise_id}:
    get:
      tags:
      - enterprises
      description: Fetch Enterprise shopfront details (products not included).
      parameters:
      - name: enterprise_id
        in: path
        description: ID of the enterprise.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: Enterprise shopfront details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnterpriseShopfront'
  /customers.json:
    get:
      tags:
      - users
      description: List of customer objects for the current user (a customer connects a user with an enterprise)
      responses:
        "200":
          description: List of Customer objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{customer_id}.json:
    put:
      tags:
      - users
      description: Updates customer object of current user (a customer connects a user with an enterprise)
      parameters:
      - name: customer_id
        in: path
        description: ID of the customer object to update.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: customer_object
        in: path
        description: Customer object to be saved.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/Customer'
      responses:
        "200":
          description: Customer object saved.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
  /enterprise_fees/{enterprise_fee_id}:
    delete:
      tags:
      - enterprises
      description: Deletes enterprise fee.
      parameters:
      - name: enterprise_fee_id
        in: path
        description: ID of the enterprise fee to delete.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: Enterprise fee successfully deleted.
  /taxonomies/{taxonomy_id}/taxons/:
    get:
      tags:
      - taxonomies
      description: Gets all Taxons belonging to a given Taxonomy.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taxon'
    post:
      tags:
      - taxonomies
      description: Posts a new Taxon to a given Taxonomy.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: taxon_object
        in: path
        description: JSON object representing the Taxon to be posted.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/taxon_object'
      responses:
        "201":
          description: successful post
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taxon'
  /taxonomies/{taxonomy_id}/taxons/{taxon_id}:
    put:
      tags:
      - taxonomies
      description: Updates the Taxon with the given Taxon ID in the Taxonomy with the given Taxonomy ID.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: taxon_id
        in: path
        description: Numeric ID of the Taxon.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: taxon_object
        in: path
        description: JSON object representing the Taxon attributes to be overwritten.
        required: true
        style: simple
        explode: false
        schema:
          $ref: '#/components/schemas/taxon_object_1'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taxon'
    delete:
      tags:
      - taxonomies
      description: Deletes the Taxon with the given Taxon ID from the Taxonomy with the given Taxonomy ID.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: taxon_id
        in: path
        description: Numeric ID of the Taxon.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "204":
          description: successful deletion
  /taxonomies/{taxonomy_id}/jstree:
    get:
      tags:
      - taxonomies
      description: Gets a Taxonomy by ID with a jstree representation.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonJstree'
  /taxonomies/{taxonomy_id}/taxons/{taxon_id}/jstree:
    get:
      tags:
      - taxonomies
      description: Gest a given Taxon from given Taxonomy ID in the jstree representation.
      parameters:
      - name: taxonomy_id
        in: path
        description: Numeric ID of the Taxonomy.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: taxon_id
        in: path
        description: Numeric ID of the Taxon.
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxonJstree'
  /cookies/consent:
    get:
      tags:
      - cookies_consent
      description: Gets the client's Cookies_Consent status.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cookies_Consent'
    post:
      tags:
      - cookies_consent
      description: Changes the client's Cookies-Consent status to true.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cookies_Consent'
    delete:
      tags:
      - cookies_consent
      description: Changes the client's Cookies-Consent status to false.
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cookies_Consent'
components:
  schemas:
    Pagination:
      type: object
      properties:
        results:
          type: integer
        pages:
          type: integer
        page:
          type: integer
        per_page:
          type: integer
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        sku:
          type: string
        price:
          type: string
        available_on:
          type: string
        permalink_live:
          type: string
        on_hand:
          type: integer
        variant_unit:
          type: string
        variant_unit_scale:
          type: string
        variant_unit_name:
          type: string
        tax_category_id:
          type: integer
        import_date:
          type: string
        image_url:
          type: string
        thumb_url:
          type: string
        producer_id:
          type: integer
        category_id:
          type: integer
        master:
          $ref: '#/components/schemas/AdminVariant'
        variants:
          type: array
          items:
            $ref: '#/components/schemas/AdminVariant'
    AdminVariant:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        on_hand:
          type: integer
        sku:
          type: string
        price:
          type: string
        producer_name:
          type: string
        import_date:
          type: string
        options_text:
          type: string
        unit_value:
          type: integer
        unit_description:
          type: string
        unit_to_display:
          type: string
        display_as:
          type: string
        display_name:
          type: string
        name_to_display:
          type: string
        on_demand:
          type: boolean
        in_stock:
          type: boolean
        image:
          type: string
        variant_overrides:
          type: array
          items:
            $ref: '#/components/schemas/AdminVariantOverride'
    AdminVariantOverride:
      type: object
      properties:
        id:
          type: integer
        count_on_hand:
          type: integer
        default_stock:
          type: integer
        hub_id:
          type: integer
        import_date:
          type: string
        on_demand:
          type: boolean
        permission_revoked_at:
          type: string
        price:
          type: string
        resettable:
          type: boolean
        sku:
          type: string
        variant_id:
          type: integer
    Variant:
      type: object
      properties:
        id:
          type: integer
        on_hand:
          type: integer
        sku:
          type: string
        price:
          type: string
        product_name:
          type: string
        is_master:
          type: boolean
        options_text:
          type: string
        unit_value:
          type: integer
        unit_description:
          type: string
        unit_to_display:
          type: string
        display_as:
          type: string
        display_name:
          type: string
        name_to_display:
          type: string
        on_demand:
          type: boolean
        fees:
          type: object
        price_with_fees:
          type: string
        tag_list:
          type: array
          items:
            type: string
    ProductImage:
      type: object
      properties:
        id:
          type: integer
        alt:
          type: string
        thumb_url:
          type: string
        small_url:
          type: string
        image_url:
          type: string
        large_url:
          type: string
    Order_Concise:
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        full_name:
          type: string
        email:
          type: string
        phone:
          type: string
        completed_at:
          type: string
        display_total:
          type: string
        show_path:
          type: string
        edit_path:
          type: string
        state:
          type: string
        payment_state:
          type: string
        shipment_state:
          type: string
        payments_path:
          type: string
        shipments_path:
          type: string
        ship_path:
          type: string
        ready_to_ship:
          type: boolean
        created_at:
          type: string
        distributor_name:
          type: string
        special_instructions:
          type: string
        payment_capture_path:
          type: string
        distributor:
          $ref: '#/components/schemas/Order_Concise_distributor'
        order_cycle:
          $ref: '#/components/schemas/Order_Concise_distributor'
    Shipment:
      type: object
      properties:
        selected_shipping_rate_id:
          type: integer
    Enterprise:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        owner_id:
          type: integer
    EnterpriseShopfront:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        latitude:
          type: integer
        longitude:
          type: integer
        long_description:
          type: string
        website:
          type: string
        instagram:
          type: string
        linkedin:
          type: string
        twitter:
          type: string
        facebook:
          type: string
        is_primary_producer:
          type: boolean
        is_distributor:
          type: boolean
        phone:
          type: string
        visible:
          type: boolean
        email_address:
          type: string
        hash:
          type: string
        logo:
          type: string
        promo_image:
          type: string
        path:
          type: string
        category:
          type: string
        active:
          type: boolean
        producers:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseThin'
        orders_close_at:
          type: string
        hubs:
          type: array
          items:
            $ref: '#/components/schemas/EnterpriseThin'
        taxons:
          type: array
          items:
            type: string
        supplied_taxons:
          type: array
          items:
            type: string
        pickup:
          type: boolean
        delivery:
          type: boolean
        address:
          type: array
          items:
            $ref: '#/components/schemas/Address'
    EnterpriseThin:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        active:
          type: boolean
        path:
          type: string
        address:
          $ref: '#/components/schemas/Address'
    Address:
      type: object
      properties:
        id:
          type: integer
        zipcode:
          type: string
        city:
          type: string
        state_name:
          type: string
        state_id:
          type: integer
        phone:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        address1:
          type: string
        address2:
          type: string
        country_id:
          type: integer
    Customer:
      type: object
      properties:
        id:
          type: integer
        enterprise_id:
          type: integer
        name:
          type: string
        code:
          type: string
        email:
          type: string
        allow_charges:
          type: boolean
    Taxon:
      type: object
      properties:
        name:
          type: string
        taxonomy_id:
          type: integer
        position:
          type: integer
        permalink:
          type: string
        taxons:
          type: array
          items:
            $ref: '#/components/schemas/Taxon'
        pretty_name:
          type: string
        id:
          type: integer
        parent_id:
          type: integer
        icon:
          type: string
    TaxonJstree:
      type: object
      properties:
        data:
          type: string
        state:
          type: string
        attr:
          $ref: '#/components/schemas/TaxonJstree_attr'
    Cookies_Consent:
      type: object
      properties:
        cookies_consent:
          type: boolean
      example:
        cookies_consent: false
    inline_response_200:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        pages:
          type: integer
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    product_object:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
    product_object_1:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
    inline_response_200_1:
      type: object
      properties:
        count:
          type: integer
        total_count:
          type: integer
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'
        pages:
          type: integer
        current_page:
          type: integer
    variant_object:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Variant'
    variant_object_1:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Variant'
    inline_response_200_2:
      type: object
      properties:
        orders:
          type: array
          items:
            $ref: '#/components/schemas/Order_Concise'
        pagination:
          type: string
    shipment_object:
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Shipment'
    enterprise_object:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Enterprise'
    enterprise_object_1:
      type: object
      properties:
        variant:
          $ref: '#/components/schemas/Enterprise'
    taxon_object:
      type: object
      properties:
        taxon:
          $ref: '#/components/schemas/Taxon'
    taxon_object_1:
      type: object
      properties:
        taxon:
          $ref: '#/components/schemas/Taxon'
    Order_Concise_distributor:
      type: object
      properties:
        id:
          type: integer
    TaxonJstree_attr:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
  securitySchemes:
    api_key:
      type: apiKey
      name: X-Spree-Token
      in: header
